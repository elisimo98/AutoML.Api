@using AutoML.Web.Services
@using MudBlazor
@inherits LayoutComponentBase
@inject NavigationManager Navigation
@inject SessionService SessionService

<MudThemeProvider Theme="customTheme" @bind-IsDarkMode="isDarkMode" />
<MudPopoverProvider />
<MudDialogProvider />
<MudSnackbarProvider />

<MudLayout>
    <MudAppBar Elevation="0">
        <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@ToggleDrawer" />
        <MudText Typo="Typo.h6" Class="ml-2">@_selectedProjectName</MudText>
    </MudAppBar>
    <MudDrawer @bind-Open="@_open" Elevation="1">
        <MudDrawerHeader>
            <MudText Typo="Typo.h6">Auto ML</MudText>
        </MudDrawerHeader>
        <MudNavMenu>
            @* <MudNavLink Href="/" Match="NavLinkMatch.All">Dashboard</MudNavLink> *@
            <MudNavLink Href="/model-configuration">Configure</MudNavLink>
@*             <MudNavLink Href="/deployments">Deployments</MudNavLink>
            <MudNavLink Href="/monitoring">Monitoring</MudNavLink>
            <MudNavLink Href="/settings">Settings</MudNavLink> *@
        </MudNavMenu>
    </MudDrawer>

    <MudMainContent Class="pt-16">
        <MudContainer Class="mt-6" Fixed=true>
            @Body
        </MudContainer>
    </MudMainContent>
</MudLayout>

@code {
    private bool isDarkMode = false;
    private bool _open = true;
    private string? _selectedProjectId;
    private string? _selectedProjectName;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await base.OnAfterRenderAsync(firstRender);

        // if (!string.IsNullOrEmpty(_selectedProjectId))
        // {
        //     return;
        // }

        // if (firstRender)
        // {
        //     _selectedProjectId = await SessionService.GetProjectIdAsync();
        //     _selectedProjectName = await SessionService.GetProjectNameAsync();
        // }

        // StateHasChanged();
    }

    private void ToggleDrawer()
    {
        _open = !_open;
    }

    private async Task OpenProjectsAsync()
    {
        _selectedProjectId = null;
        await SessionService.SetProjectIdAsync(string.Empty);
        Navigation.NavigateTo("/");
    }

    private static PaletteLight lightPalette = new PaletteLight
    {
        Primary = "#030213",
        PrimaryContrastText = "#FFFFFF",
        Secondary = "#E6E9FF", // closest to oklch(0.95 .0058 264.53)
        SecondaryContrastText = "#030213",

        Background = "#FFFFFF",
        Surface = "#FFFFFF",

        DrawerBackground = "#FAFAFA", // oklch(0.985 0 0) ~ very light gray
        DrawerText = "#252525",       // oklch(0.145 0 0) ~ dark gray
        AppbarBackground = "#030213",
        AppbarText = "#FAFAFA",

        TextPrimary = "#252525",      // oklch(0.145 0 0)
        TextSecondary = "#717182",    // muted-foreground

        ActionDefault = "#CBCED4",    // switch-background
        ActionDisabled = "#ECECF0",   // muted
        ActionDisabledBackground = "#F3F3F5", // input-background

        Divider = "#0000001A",        // border (transparent black)
        TableLines = "#0000001A",
        LinesDefault = "#0000001A",

        HoverOpacity = 0.06f,

        Success = "#28A745",
        Error = "#D4183D",
        Warning = "#F0B429",          // approx oklch(.828 .189 84.429)
        Info = "#7EA2F4",             // approx oklch(.6 .118 184.704)
    };

    private static PaletteDark darkPalette = new PaletteDark
    {
        Primary = "#14B8A6",
        Secondary = "#64748B",
        Tertiary = "#06B6D4",

        Background = "#0F172A",
        Surface = "#1E293B",
        AppbarBackground = "#1E293B",
        AppbarText = "#F8FAFC",
        DrawerBackground = "#0F172A",

        Success = "#22C55E",
        Warning = "#F59E0B",
        Error = "#EF4444",
        Info = "#14B8A6",

        TextPrimary = "#F8FAFC",
        TextSecondary = "#CBD5E1",
        ActionDefault = "#94A3B8",
        Divider = "#334155"
    };

    private MudTheme customTheme = new MudTheme()
    {
        PaletteLight = lightPalette,
        PaletteDark = darkPalette,

        Typography = new Typography()
        {
            Default = new DefaultTypography()
            {
                FontSize = "1rem", // 16px
                FontWeight = "400",  // font-weight-normal
            },
            H1 = new H1Typography() { FontWeight = "500" },
            H2 = new H2Typography() { FontWeight = "500" },
            H3 = new H3Typography() { FontWeight = "500" },
            H4 = new H4Typography() { FontWeight = "500" },
            H5 = new H5Typography() { FontWeight = "500" },
            H6 = new H6Typography() { FontWeight = "500" },
            Button = new ButtonTypography() { FontWeight = "500" }
        }
    };
}